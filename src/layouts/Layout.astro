---
import '../styles.css';

export interface Props {
	title?: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang='en'>
	<head>
		<meta charset='UTF-8' />
		<meta
			name='description'
			content='Astro description'
		/>
		<meta
			name='viewport'
			content='width=device-width'
		/>
		<link
			rel='icon'
			type='image/svg+xml'
			href='/favicon.svg'
		/>
		<meta
			name='generator'
			content={Astro.generator}
		/>
		<title>{title}</title>
	</head>
	<body style='margin: 0; background: #000;'>
		<canvas class='-z-10 opacity-25 fixed top-0 left-0 w-screen h-screen object-cover'></canvas>
		<main class="z-10 text-white w-full h-full overflow-auto">
			<slot />
		</main>
	</body>
	<script>
		const C = document.querySelector('canvas')!,
			$ = C.getContext('2d')!,
			W = (C.width = innerWidth),
			H = (C.height = innerHeight);
		const str = 'sf dfg sgrgjskg s r rgsrg* ? rkja | kg387313897 2',
			matrix = str.split('');
		let font = 16,
			col = W / font * 1.4,
			arr: number[] = [];
		for (let i = 0; i < col; i++) arr[i] = Math.random() * H; // Initialize random starting positions

		function draw() {
			$.fillStyle = 'rgba(0, 0, 0, .05)';
			$.fillRect(0, 0, W, H);
			$.fillStyle = '#0f0';
			$.font = font + 'px system-ui';
			for (let i = 0; i < arr.length; i++) {
				let txt = matrix[Math.floor(Math.random() * matrix.length)];
				$.fillText(txt, i * font, arr[i]);
				if (arr[i] > H && Math.random() > 0.5) arr[i] = 0;
				arr[i] += Math.random() * 25; // Adjust the speed of falling characters
			}
		}

		setInterval(draw, 134);
		// window.addEventListener('resize', () => location.reload())
	</script>
</html>
